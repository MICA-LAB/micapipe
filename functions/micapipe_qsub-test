#!/bin/bash
#
# Test of the variables and PATH for qsub:
#
# Only print a test.
#
# https://github.com/MICA-MNI/micaopen/templates
#
#   ARGUMENTS order:
#   $1 : BIDS directory
#   $2 : participant
#   $3 : Out parcDirectory
#
# ONLY for scripting and debugging:
# TEST=ON

BIDS=$1
id=$2
out=$3
PROC=$4
here=`pwd`

# if processing is running on MICA-lab or all.q SGE
if [ "$PROC" = "qsub-MICA" ] || [ "$PROC" = "qsub-all.q" ];then
    export MICAPIPE=/data_/mica1/01_programs/micapipe
    source ${MICAPIPE}/functions/init.sh;
fi

# source utilities
source $MICAPIPE/functions/utilities.sh

#------------------------------------------------------------------------------#
Title "Running MICA qsub test"

#	Timer
aloita=$(date +%s)

# Assigns variables names
bids_variables $BIDS $id $out

# if temporary directory is empty
if [ -z ${tmp} ]; then tmp=/tmp; fi
# Create temporal directory
tmp=${tmp}/${RANDOM}_micapipe_${subject}
if [ ! -d $tmp ]; then Do_cmd mkdir -p $tmp; fi

# Freesurface SUBJECTs directory
export SUBJECTS_DIR=${dir_surf}

Title ">>> PATHS and Global variables <<<"
Info "Software paths"
Note "User              =" "`whoami`"
Note "Workstation       =" "`uname -n`"
Note "SHELL             =" $SHELL
Note "MICAPIPE          =" $MICAPIPE
Note "AFNIDIR           =" $AFNIDIR
Note "ANTSPATH          =" $ANTSPATH
Note "MRtrix3 bin       =" "`which mrinfo`"
Note "wb_command        =" "`which wb_command`"
Note "FREESURFER_HOME   =" $FREESURFER_HOME
Note "FSLDIR            =" $FSLDIR
Note "FSL_BIN           =" $FSL_BIN
Note "FIXPATH           =" $FIXPATH
Note "FSLPARALLEL       =" $FSLPARALLEL

Info "python: `python --version`"
Note "PYTHONPATH        =" $PYTHONPATH
Note "PYTHONHOME        =" $PYTHONHOME
Note "LC_ALL            =" $LC_ALL
Note "LANG              =" $LANG
Note "LD_LIBRARY_PATH   =" $LD_LIBRARY_PATH

Info "Global variables"
Note "tmp               =" $tmp
Note "CORES             =" $CORES
Note "OMP_NUM_THREADS   =" $OMP_NUM_THREADS
Note "NSLOTS            =" $NSLOTS
Note "PROC              =" $PROC

# print the names on the terminal
bids_print.variables
bids_print.variables-rsfmri
bids_print.variables-post

#    PACKAGES DEPENDENCIES print versions
# Dicom to nifti X converter
if [[ -z `which dcm2niix` ]]; then Error "Check your dcm2niix installation"; else Info "dcm2niix was found"; fi
# tree display
if [[ -z `which tree` ]]; then Warn "tree function was not found"; else Info "tree version: `tree --version | awk '{print $2}'`"; fi
#  MRtrix3
if [[ -z `which mrinfo` ]]; then Error "MRtrix3 was not found"; else Info "MRtrix3 version: `mrinfo -version | awk 'NR==1 {print $3}'`"; fi
# freesurfer
if [[ -z `which recon-all` ]]; then Error "FreeSurfer was not found"; else Info "FreeSurfer version: `recon-all -version`"; fi
# FSL
if [[ -z `which flirt` ]]; then Error "FSL was not found"; else Info "FSL version: `flirt -version | awk '{print $3}'`"; fi
# AFNI
if [[ -z `which 3dresample` ]]; then Error "AFNI was not found"; else Info "AFNI version: `afni -version | awk -F ':' '{print $2}'`"; fi
# ANTSx
if [[ -z `which antsRegistration` ]]; then Error "ANTs was not found"; else Info "ANTS version: `antsRegistration --version | awk -F ':' 'NR==1{print $2}'`"; fi
# workbench
if [[ -z `which wb_command` ]]; then Error "WorkBench was not found"; else Info "workbench version: `wb_command -version | awk 'NR==3{print $2}'`"; fi
# workbench
if [[ -z `which fix` ]]; then Warning "fix was not found, ICA-FIX will be skipped"; else Info "ICA-based Xnoiseifier was found here: `which fix`"; fi


# QC notification of completition
lopuu=$(date +%s)
eri=$(echo "$lopuu - $aloita" | bc)
eri=`echo print $eri/60 | perl`

Title "Running MICA qsub test ended in \033[38;5;220m `printf "%0.3f\n" ${eri}` minutes \033[38;5;141m"
echo "${id}, MICAq-TEST, DONE, `whoami`, `uname -n`, $(date), `printf "%0.3f\n" ${eri}`, $PROC" #>> ${out}/brain-proc.csv
