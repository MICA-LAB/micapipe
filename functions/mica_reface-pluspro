#!/bin/bash
# MICA reface
#
#
# Class: Optional pre processing step (ANONYMIZE)
# we strongly recommend to anonymize the BIDS database before running MICAPIPE
#
#
# Rationale: AFNI's reface algorithm was applied to the T1w native bids anatomical images to obtain
#            a T1w_reface-plus NIFTI.
#            Then a warp filed was calculated from the T1w anatomical image registration (eg. T1w and qT1)
#            to the T1w_reface-plus. The resulting warp fields were then applied to each original
#            anatomical images in order to warp the faces AND maintain the original
#            voxel intensities. 
#
# ONLY for scripting and debugging
# TEST=ON
#
# source print funtions for MICAPIPE
source ${MICAPIPE}/functions/utilities.sh

help() {
echo -e "\033[38;5;141m
Usage:    `basename $0`\033[0m  \033[38;5;197m-sub\033[0m <subject_id> \033[38;5;197m-out\033[0m <FULL_PATH/outputDirectory> \033[38;5;197m-bids\033[0m <FULL_PATH/BIDS-directory>\n
\t\t\033[38;5;197m-sub\033[0m 	Subject identification (no 'sub-')
\t\t\033[38;5;197m-out\033[0m 	Output directory for the processed files <anat ORIG and face-warps>.
\t\t\033[38;5;197m-bids\033[0m 	Path to BIDS directory

Warning: This script will replace the ORIGINAL anat volumes for ANONYMIZED in the BIDS directory
         a copy of the original will be save in the OUT directory
         We strongly recomend that the OUT directory is not the BIDS nor the DERIVATIVES

Software versions requirements:
        AFNI        1.10  (https://afni.nimh.nih.gov/download)
        ANTs        2.3.3 (https://github.com/ANTsX/ANTs)

RRC
McGill University, MNI, MICA-lab, May 2020
https://github.com/MICA-MNI
http://mica-mni.github.io/
"
}

# -----------------------------------------------------------------------------------------------#
#			ARGUMENTS
# Create VARIABLES
for arg in "$@"
do
  case "$arg" in
  -h|-help)
    help
    exit 1
  ;;
  -sub)
    id=$2
    shift;shift
  ;;
  -out)
    out=$2
    shift;shift
  ;;
  -bids)
    BIDS=$2
    shift;shift
  ;;
  -*)
    Error "Unknown option ${2}"
    help
    exit
  ;;
    esac
done

# argument check out & WARNINGS
arg=($id $out $BIDS)
if [ "${#arg[@]}" -lt 3 ]; then
Error "One or more mandatory arguments are missing:"
Note "-sub " $id
Note "-out " "$out"
Note "-bids " "$BIDS"
help; exit 0; fi

# Get the real path of the Inputs
out=`realpath $out`
BIDS=`realpath $BIDS`

# CORES should be defined as GLOBAL variable maybe
if [[ -z $CORES ]]; then CORES=6; Info "ANTs will use $CORES CORES"; fi

# Assigns BIDS variables names
bids_variables $BIDS $id $out

Warning "This script will replace the ORIGINAL anat volumes for ANONYMIZED in the BIDS directory
              a copy of the original will be save in the OUT directory
              We strongly recomend that the OUT directory is not the BIDS nor the DERIVATIVES"

# -----------------------------------------------------------------------------------------------#
#			  Timer & Beginning
aloita=$(date +%s)

#------------------------------------------------------------------------------#
Title "Running Reface Plus Pro: MICAPIPE"

# Creates OUT directory if it doesn't exist
out_warps=${out}/${id}
Info "Output directory: $out_warps"
if [ ! -d ${out_warps} ]; then Do_cmd mkdir -p ${out_warps}; fi
here=`pwd`

# Get the T1w_run-1 name (no path). Note bids_T1ws come from bids_variables
t1w_run1=`echo ${bids_T1ws[0]} | awk -F 'anat/' '{print $2}'`

# Go to BIDS/anat to create a list of all the Volumes
cd ${subject_bids}/anat/
# Create a list with all anat volumes
anat=(`ls *gz`)
# Remove the T1w_run-1 from anat list
anat=(${anat[@]/$t1w_run1})
Info "${anat[@]}"

# Copy original BIDS to out directory
Do_cmd cp -v *gz ${out_warps}

# move to out directory to create the warps there
cd $out_warps

# Reface T1w_run-1
T1wrefaced=${t1w_run1/.nii.gz/}
Do_cmd @afni_refacer_run -input ${t1w_run1} -mode_all -anonymize_output -prefix ${T1wrefaced}

# Removing unnecessary Outputs from AFNI
ref_T1=${T1wrefaced}.reface_plus.nii.gz
Do_cmd rm -R ${T1wrefaced}_QC ${T1wrefaced}.reface.nii.gz ${T1wrefaced}.face_plus.nii.gz ${T1wrefaced}.face.nii.gz ${T1wrefaced}.deface.nii.gz
Info "ANFI refaced-plus is done"

# Generate a deformation wapfield for the REFACE-PLUS
Do_cmd antsRegistrationSyN.sh -d 3 -f ${ref_T1} -m ${t1w_run1} -o ${T1wrefaced}_ -t s -n $CORES -p f
Do_cmd rm -v ${T1wrefaced}_InverseWarped.nii.gz ${T1wrefaced}_Warped.nii.gz
face_warp=${T1wrefaced}_1Warp.nii.gz
face_mat=${T1wrefaced}_0GenericAffine.mat

# Apply Face warpfield to the T1w_run-1
Do_cmd antsApplyTransforms -d 3 -u int -i $t1w_run1 -r $t1w_run1 -n linear -t ${face_warp} -t ${face_mat} -o ${T1wrefaced}_reface-pluspro.nii.gz
register_QC $t1w_run1 ${T1wrefaced}reface-pluspro.nii.gz
Info "Face-warpfield was calculated"

# # Loop over all the other structural images (including non T1w volumes)
for nii in ${anat[@]}; do
  # Linear/Affine registration to T1w_run-1
  nii_out=${nii/.nii.gz/_}
  Do_cmd antsRegistrationSyN.sh -d 3 -f ${t1w_run1} -m ${nii} -o ${nii_out} -t a -n $CORES -p d
  Do_cmd rm -v ${nii_out}InverseWarped.nii.gz ${nii_out}Warped.nii.gz

  # Apply face-warp, affine mat, inverse mat and return to native Volume space
  T1w_run1_mat=${nii_out}0GenericAffine.mat
  Do_cmd antsApplyTransforms -d 3 -u int -i $nii -r $t1w_run1 -n linear -t [${T1w_run1_mat},1] -t [${face_mat},1] -t ${face_warp} -t ${face_mat} -t ${T1w_run1_mat} -o ${nii_out}reface-pluspro.nii.gz
  register_QC $nii ${nii_out}reface-pluspro.nii.gz
done
Info "Face-warpfield was applied to all volumes"

#------------------------------------------------------------------------------#
# Replace ORIGINAL BIDS/anat with the ANONYMIZED
for nii in *_reface-pluspro.nii.gz; do
    Do_cmd cp -v $nii ${subject_bids}/anat/${nii/_reface-pluspro/}
done

cd $here

# -----------------------------------------------------------------------------------------------#
#			 Total Running Time
lopuu=$(date +%s)
eri=$(echo "$lopuu - $aloita" | bc)
eri=`echo print $eri/60 | perl`
Title "TOTAL running time:\033[38;5;220m `printf "%0.3f\n" ${eri}` minutes \033[38;5;141m"
