.. _structproc:

.. title:: Structural processing


Structural processing
============================================================

This sections describes all structural processing modules, which includes pre-processing and post-processing of T1-weighted images found in the BIDS directory. Structural processing modules perform volumetric (**-proc_structural**) and surface-based (**proc-freesurfer**, **-post_structural**, **-GD**, **-Morphology**) registrations and analyses. 


-proc_structural
--------------------------------------------------------

This module performs initial structural pre-processing, keeping data in volumetric format. Two main spaces are found in this stream: *nativepro* as well as *MNI152*.

.. admonition:: Nativepro?! ü§®

    Nativepro stands for **native** **pro**\cessing space. This denomination is used to distinguish the space occupied by the main scan from standard native space. Indeed, as micapipe supports the alignment and averaging of several distinct T1w acquisitions, we opted to refer to the resulting space using a different term, so not to confuse this space with the native space of each original T1w scan.

.. tabs::

    .. tab:: Processing steps

        - Each T1-weighted run is LPI-reoriented, deobliqued, and oriented to standard space (MNI152).
        - Create the T1-weighted image used in all downstream processing: T1_nativepro. If multiple T1w scans are found in the raw data, they are aligned to the first run and averaged.
        - Intensity non-uniformity correction (N4)
        - Intensity rescaling [100,0]
        - Create brainmask (FSL-BET)
        - Subcortical structure segmentation using FSL FIRST
        - Tissue type segmentation (Gray matter, white matter, CSF) using FSL FAST
        - Non-linear registration to MNI152 (0.8mm and 2mm resolutions)
        - Five-tissue-type image segmentation (5ttgen, used for anatomically constrained tractography)

    .. tab:: Usage

        .. parsed-literal:: 
            $ mica-pipe **-sub** <subject_id> **-out** <outputDirectory> **-bids** <BIDS-directory> **-proc_structural**
    
    .. tab:: All outputs

        Directories created or populated by **-proc-structural**:

        .. parsed-literal:: 

            - <outputDirectory>/proc_struct
            - <outputDirectory>/proc_struct/first
            - <outputDirectory>/xfms

        Files generated by **-proc-structural**:

        .. parsed-literal:: 
            - Main structural scan: *<outputDirectory>/proc_struct/<sub>_t1w_XXmm_nativepro.nii.gz*
            - Brain extracted main structural scan: *<outputDirectory>/proc_struct/<sub>_t1w_XXmm_nativepro_brain.nii.gz*
            - Brain-mask for main structural scan: *<outputDirectory>/proc_struct/<sub>_t1w_XXmm_nativepro_brain_mask.nii.gz*
            - Main structural scan linearly-registered to MNI152 1mm template, generated during FSL FIRST: *<sub>_t1w_1mm_MNI152_brain_affine.nii.gz*
            - FSL FAST outputs:
                - *<sub>_t1w_XXmm_nativepro_brain_seg.nii.gz*
                - *<sub>_t1w_XXmm_nativepro_brain_pve_0.nii.gz* 
                - *<sub>_t1w_XXmm_nativepro_brain_pve_1.nii.gz*
                - *<sub>_t1w_XXmm_nativepro_brain_pve_2.nii.gz* 
                - *<sub>_t1w_XXmm_nativepro_brain_pveseg.nii.gz* 
                - *<sub>_t1w_XXmm_nativepro_brain_mixeltype.nii.gz*
            - Main structural scan non-linearly-registered to MNI152:    
                - *<sub>_t1w_0.8mm_MNI152_brain.nii.gz*
                - *<sub>_t1w_2mm_MNI152_brain.nii.gz*
            - Final 5ttgen output:
                - *<sub>_t1w_XXmm_nativepro_5TT.nii.gz*
            - FSL FIRST intermediary files: *<outputDirectory>/proc_struct/first/**
            - If multiple T1w scans are found in the raw data directory, transformation files to generate nativepro image will generated and stored here: *<outputDirectory>/xfms/<sub>_t1w_run-2_to_run-1** 
            - Linear registration to MNI152 generated during FSL FIRST: *<outputDirectory>/xfms/<sub>_t1w_XXmm_nativepro_brain_to_1mm_MNI152_brain.mat*
            - Files generated for non-linear registration to MNI152 2mm template:  *<outputDirectory>/xfms/<sub>_t1w_XXmm_nativepro_brain_to_2mm_MNI152_SyN_brain**
            - Files generated for non-linear registration to MNI152 0.8mm template: *<outputDirectory>/xfms/<sub>_t1w_XXmm_nativepro_brain_to_0.8mm_MNI152_SyN_brain**

    .. tab:: -slim

        Files generated by **-proc-structural** during slim run


-proc_freesurfer
--------------------------------------------------------

This modules performs cortical surface segmentation from all native T1w acquisitions stored in the subject's BIDS directory.

.. tabs::

    .. tab:: Processing steps

        - Run FreeSurfer's recon-all pipeline will all T1-weighted scans found in raw data directory

    .. tab:: Usage

        .. parsed-literal:: 
            $ mica-pipe **-sub** <subject_id> **-out** <outputDirectory> **-bids** <BIDS-directory> **-proc_freesurfer**
    
    .. tab:: All outputs

        Directories created or populated by **-proc-freesurfer**:

        .. parsed-literal:: 

            - <outputDirectory>/proc_struct/surfaces/<sub>

        Files generated by **-proc-freesurfer**:

        .. parsed-literal:: 
            - A list of all recon-all output files can be found `here <https://surfer.nmr.mgh.harvard.edu/fswiki/ReconAllOutputFiles>`_.

    .. tab:: -slim        

        Files generated by **-proc-freesurfer** during slim run


-post_structural
--------------------------------------------------------

This first structural post-processing module registers native FreeSurfer-space cortical surfaces to a standard template, in addition to mapping all cortical parcellation schemes to the subject's native surface space and volumetric nativepro space.

.. admonition:: Prerequisites üñêüèº

     You need to run the **proc_structural** and **proc_freesurfer** before this stage

.. tabs::

    .. tab:: Processing steps
    
        **Post-structural** processing description :

            - Registration (Compute affine matrix from Freesurfer space to nativepro)
            - Cerebellar parcellation from MNI152_0.8mm to T1_Nativepro (inverse transformation)
            - Create parcellation on nativepro space + Register the annot surface parcellation to the T1-freesurfer volume - Register parcellation (native freesurfer) to nativepro
            - Compute warp of native structural to Freesurfer and apply to 5TT and first (build the conte69-32k sphere + resample white and pial surfaces to conte69-32k)

    .. tab:: Usage

        .. parsed-literal:: 
            $ mica-pipe **-sub** <subject_id> **-out** <outputDirectory> **-bids** <BIDS-directory> **-post_structural**    
    
    .. tab:: All outputs

        Directories created or populated by **-post-structural**:

        .. parsed-literal:: 

            - <outputDirectory>/proc_struct
            - <outputDirectory>/proc_struct/surfaces/conte69
            - <outputDirectory>/proc_struct/surfaces/<sub>/label
            - <outputDirectory>/proc_struct/volumetric
            - <outputDirectory>/xfms

        Files generated by **-post-structural**:

        .. parsed-literal:: 
            - Outputs stored in <outputDirectory>/proc_struct
                - *<sub>_t1w_XXmm_fsspace.nii.gz* : 
            - Outputs stored in <outputDirectory>/proc_struct/surfaces/conte69 :
                - 
            - Outputs stored in <outputDirectory>/proc_struct/surfaces/<sub>/label :
                - 
            - Outputs stored in <outputDirectory>/proc_struct/volumetric
                -     
            - Outputs stored in <outputDirectory>/xfms
                - 

    .. tab:: -slim        

        Files generated by **-post-structural** during slim run


-GD
--------------------------------------------------------

This module calculates geodesic distance between all cortical parcels from the subject's native midsurface mesh. with

.. admonition:: Prerequisites üñêüèº

     You need to run the **proc_structural**, **proc_freesurfer**, and **post_structural** before this stage


-Morphology
--------------------------------------------------------

Here, surface-based morphological features are registered and smoothed on two distinct templates.

.. admonition:: Prerequisites üñêüèº

     You need to run the **proc_structural**, **proc_freesurfer**, and **post_structural** before this stage
